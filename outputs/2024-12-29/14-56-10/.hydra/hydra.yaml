hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra: []
    task:
    - dataset=my_mimic_lab
    - meta.transforms=True
    - optimizer.lr=5e-6
    - model.output_logits=1
    - model=multi_modal_pretrained_vit_lab
    - meta.prefix_name=EHR
    - scheduler=cosine_annealing
    - epochs=200
    - meta.batch_size=50
    - meta.cross_validation=False
    - meta.num_workers=20
    - model.transforms.img_size=384
    - meta.gpus=[0]
    - meta.imbalance_handler=None
    - optimizer.name=AdamW
    - optimizer.lr_scheduler=None
    - model.meta.p_visual_dropout=1.0
    - model.meta.p_feature_dropout=0.0
  job:
    name: trainer
    override_dirname: dataset=my_mimic_lab,epochs=200,meta.batch_size=50,meta.cross_validation=False,meta.gpus=[0],meta.imbalance_handler=None,meta.num_workers=20,meta.prefix_name=EHR,meta.transforms=True,model.meta.p_feature_dropout=0.0,model.meta.p_visual_dropout=1.0,model.output_logits=1,model.transforms.img_size=384,model=multi_modal_pretrained_vit_lab,optimizer.lr=5e-6,optimizer.lr_scheduler=None,optimizer.name=AdamW,scheduler=cosine_annealing
    id: ???
    num: ???
    config_name: my_base_cfg
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.1.2
    cwd: /home/awc2159/projects/MeTra_3D
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/awc2159/projects/MeTra_3D/classification/config
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    choices:
      scheduler: cosine_annealing
      model: multi_modal_pretrained_vit_lab
      dataset: my_mimic_lab
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
